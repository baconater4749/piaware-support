#
# helpers for configure-system.tcl
#

proc warn {msg} {
	puts stderr "WARNING: $msg"
}

proc log {msg} {
	puts stderr "$msg"
}

proc replace_file {path mode lines} {
	if {$::params(dryrun)} {
		puts stderr "Dryrun: new contents of $path (mode $mode):"
		puts stderr "==============================================="
		foreach line $lines {
			puts stderr $line
		}
		puts stderr "==============================================="
		return
	}

	puts stderr "Updating $path .."

	set backup ${path}.old
	set tmp ${path}.new

	set f [open $tmp "w" $mode]
	try {
		chan configure $f -encoding ascii -translation lf
		foreach line $lines {
			puts $f $line
		}
	} finally {
		close $f
	}

	if {[file exists $path]} {
		file copy -force $path $backup
	}

	file rename -force $tmp $path
}

proc generate_file {path text {mode 0644} {header 1}} {
	if {$header} {
		set ::newfiletext($path) {
			{# Generated by configure-system.tcl}
			{# This file will be overwritten on reboot.}
			{}
		}
	}
	lappend ::newfiletext($path) {*}$text
	set ::newfilemode($path) $mode
}

proc generate_file_part {path text {mode 0644} {header 1}} {
	if {![info exists ::newfiletext($path)]} {
		generate_file $path $text $mode
	} else {
		lappend ::newfiletext($path) "" {*}$text
	}
}

proc flush_generated_files {} {
	foreach path [array names ::newfiletext] {
		replace_file $path $::newfilemode($path) $::newfiletext($path)
	}
}

proc snapshot {} {
	return [list [array get ::newfiletext] [array get ::newfilemode]]
}

proc restore_snapshot {ss} {
	lassign $ss texts modes
	array unset ::newfiletext
	array unset ::newfilemode
	array set ::newfiletext $texts
	array set ::newfilemode $modes
}
